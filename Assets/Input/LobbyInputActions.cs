//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Input/LobbyInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @LobbyInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @LobbyInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""LobbyInputActions"",
    ""maps"": [
        {
            ""name"": ""Lobby"",
            ""id"": ""aecb9ded-c269-4234-bdd1-7fb51e764cb6"",
            ""actions"": [
                {
                    ""name"": ""ReadyUp"",
                    ""type"": ""Button"",
                    ""id"": ""d3d749a2-de8c-462e-8a1f-453f0836fb1e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelExitLobby"",
                    ""type"": ""Button"",
                    ""id"": ""0ec0e154-c282-473d-9e91-b715a88f5b5b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveLeft"",
                    ""type"": ""Button"",
                    ""id"": ""d33a53cd-524a-4e22-836a-f208188394ba"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveRight"",
                    ""type"": ""Button"",
                    ""id"": ""3798c6f0-7548-450e-a084-73e71420416c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""79dbe5f9-4c5a-4d0c-93e2-599268827b74"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReadyUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a146807b-a097-46d9-b30f-4d6cb8103283"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReadyUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73507b5b-a512-46d7-9bae-33886352d899"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReadyUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73d931e8-4cdc-410d-9a5e-69e7811a912e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelExitLobby"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ba1c052-3564-43f0-a69a-7b8875660e8b"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelExitLobby"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f47a1a4-61b8-4de6-83f0-8cec9b212c4b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelExitLobby"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abb83929-c2bd-4eb7-abf1-a4ceac19adc5"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7d22925-cf8e-46d9-931f-cbf1df4fdf03"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94510cd8-a126-4eef-b2c8-e9f67bb44c5d"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9efbdbf-ed7a-4dac-832d-79709625cbed"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d9b08cf-4d5b-4171-a7dd-6758bd1be4ed"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acdbeebb-0e25-4056-8b56-306009048e08"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10809799-6bae-4ad4-b43a-bbd3fdd8be94"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd9b6c80-1aab-48fe-a6a1-7c25e317534c"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Lobby
        m_Lobby = asset.FindActionMap("Lobby", throwIfNotFound: true);
        m_Lobby_ReadyUp = m_Lobby.FindAction("ReadyUp", throwIfNotFound: true);
        m_Lobby_CancelExitLobby = m_Lobby.FindAction("CancelExitLobby", throwIfNotFound: true);
        m_Lobby_MoveLeft = m_Lobby.FindAction("MoveLeft", throwIfNotFound: true);
        m_Lobby_MoveRight = m_Lobby.FindAction("MoveRight", throwIfNotFound: true);
    }

    ~@LobbyInputActions()
    {
        UnityEngine.Debug.Assert(!m_Lobby.enabled, "This will cause a leak and performance issues, LobbyInputActions.Lobby.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Lobby
    private readonly InputActionMap m_Lobby;
    private List<ILobbyActions> m_LobbyActionsCallbackInterfaces = new List<ILobbyActions>();
    private readonly InputAction m_Lobby_ReadyUp;
    private readonly InputAction m_Lobby_CancelExitLobby;
    private readonly InputAction m_Lobby_MoveLeft;
    private readonly InputAction m_Lobby_MoveRight;
    public struct LobbyActions
    {
        private @LobbyInputActions m_Wrapper;
        public LobbyActions(@LobbyInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ReadyUp => m_Wrapper.m_Lobby_ReadyUp;
        public InputAction @CancelExitLobby => m_Wrapper.m_Lobby_CancelExitLobby;
        public InputAction @MoveLeft => m_Wrapper.m_Lobby_MoveLeft;
        public InputAction @MoveRight => m_Wrapper.m_Lobby_MoveRight;
        public InputActionMap Get() { return m_Wrapper.m_Lobby; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LobbyActions set) { return set.Get(); }
        public void AddCallbacks(ILobbyActions instance)
        {
            if (instance == null || m_Wrapper.m_LobbyActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_LobbyActionsCallbackInterfaces.Add(instance);
            @ReadyUp.started += instance.OnReadyUp;
            @ReadyUp.performed += instance.OnReadyUp;
            @ReadyUp.canceled += instance.OnReadyUp;
            @CancelExitLobby.started += instance.OnCancelExitLobby;
            @CancelExitLobby.performed += instance.OnCancelExitLobby;
            @CancelExitLobby.canceled += instance.OnCancelExitLobby;
            @MoveLeft.started += instance.OnMoveLeft;
            @MoveLeft.performed += instance.OnMoveLeft;
            @MoveLeft.canceled += instance.OnMoveLeft;
            @MoveRight.started += instance.OnMoveRight;
            @MoveRight.performed += instance.OnMoveRight;
            @MoveRight.canceled += instance.OnMoveRight;
        }

        private void UnregisterCallbacks(ILobbyActions instance)
        {
            @ReadyUp.started -= instance.OnReadyUp;
            @ReadyUp.performed -= instance.OnReadyUp;
            @ReadyUp.canceled -= instance.OnReadyUp;
            @CancelExitLobby.started -= instance.OnCancelExitLobby;
            @CancelExitLobby.performed -= instance.OnCancelExitLobby;
            @CancelExitLobby.canceled -= instance.OnCancelExitLobby;
            @MoveLeft.started -= instance.OnMoveLeft;
            @MoveLeft.performed -= instance.OnMoveLeft;
            @MoveLeft.canceled -= instance.OnMoveLeft;
            @MoveRight.started -= instance.OnMoveRight;
            @MoveRight.performed -= instance.OnMoveRight;
            @MoveRight.canceled -= instance.OnMoveRight;
        }

        public void RemoveCallbacks(ILobbyActions instance)
        {
            if (m_Wrapper.m_LobbyActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ILobbyActions instance)
        {
            foreach (var item in m_Wrapper.m_LobbyActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_LobbyActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public LobbyActions @Lobby => new LobbyActions(this);
    public interface ILobbyActions
    {
        void OnReadyUp(InputAction.CallbackContext context);
        void OnCancelExitLobby(InputAction.CallbackContext context);
        void OnMoveLeft(InputAction.CallbackContext context);
        void OnMoveRight(InputAction.CallbackContext context);
    }
}
